{"version":3,"sources":["webpack:///./index.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAqC;;AAErC;AACA,cAAc,yCAAI;;AAElB;AACA,oBAAoB,oDAAY;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAA8C;AACvE,2BAA2B,UAAU,GAAG,aAAa;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bootstrap.5.bundle.js","sourcesContent":["import * as wasm from 'compose-area';\n\n// Assign wasm module to window object for testing purposes.\nwindow.wasm = wasm;\n\n// Initialize compose area\nconst composeArea = wasm.bind_to('wrapper');\nwindow.composeArea = composeArea;\n\n// Elements\nconst wrapper = document.getElementById('wrapper');\nconst logDiv = document.querySelector('#log div');\nconst extractedDiv = document.querySelector('#extracted div');\nconst selectionDiv = document.querySelector('#selection div');\nconst rawDiv = document.querySelector('#raw div');\n\n// Helper functions\n\nlet startTime = null;\n\nfunction log() {\n    if (startTime === null) {\n        startTime = new Date();\n    }\n    console.log(...arguments);\n    const ms = (new Date() - startTime).toString();\n    const pad = '      ';\n    const timestamp = `${pad.substring(0, pad.length - ms.length) + ms}`;\n    logDiv.innerHTML += `${timestamp} ${arguments[0]}<br>`;\n}\n\nfunction updateSelectionRange(e) {\n    log('⚙️ store_selection_range');\n    let range_result = composeArea.store_selection_range();\n    log('⚙️ ⤷ ' + range_result.to_string_compact());\n    showState();\n}\n\nfunction showState() {\n    // Extract text\n    const text = composeArea.get_text();\n    extractedDiv.innerText = text.replace(/\\n/g, '↵\\n');\n\n    // Get range\n    const range_result = composeArea.fetch_range();\n    console.log(range_result);\n    selectionDiv.innerText = range_result.to_string();\n\n    // Get raw HTML\n    rawDiv.innerText = wrapper.innerHTML;\n}\n\n\n// Add event listeners\n\nwrapper.addEventListener('keydown', (e) => {\n    log('⚡ keydown', e);\n});\nwrapper.addEventListener('keyup', (e) => {\n    log('⚡ keyup', e);\n});\nwrapper.addEventListener('mouseup', (e) => {\n    log('⚡ mouseup', e);\n});\nwrapper.addEventListener('paste', (e) => {\n    log('⚡ paste', e);\n    e.preventDefault();\n    const clipboardData = e.clipboardData.getData('text/plain');\n    if (clipboardData) {\n        log('⚙️ insert_text');\n        composeArea.insert_text(clipboardData);\n    }\n});\n\n// Note: Unfortunately the selectionchange listener can only be set on document\n// level, not on the wrapper itself.\ndocument.addEventListener('selectionchange', (e) => {\n    log('⚡ selectionchange', e);\n    updateSelectionRange();\n});\n\n// Emoji handling\n\nfunction insertEmoji(e) {\n    const img = e.target.nodeName === 'IMG' ? e.target : e.target.children[0];\n    log(`⚙️ insert_image`);\n    composeArea.insert_image(img.src, img.alt, 'emoji');\n    showState();\n}\ndocument.getElementById('tongue').addEventListener('click', insertEmoji);\ndocument.getElementById('beers').addEventListener('click', insertEmoji);\ndocument.getElementById('facepalm').addEventListener('click', insertEmoji);\n"],"sourceRoot":""}