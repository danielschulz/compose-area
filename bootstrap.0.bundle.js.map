{"version":3,"sources":["webpack:///./node_modules/compose-area/compose_area.js","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":";;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;;AAE/C;;AAEA;;AAEA;;AAEA,yBAAyB,kBAAkB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kDAAkD,+BAA+B;;AAEjF;;AAEA;AACA;AACA,yEAAyE,oEAAW;AACpF,8CAA8C,oEAAW;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS,IAAI,YAAY,IAAI,UAAU;AACzD;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,UAAU,cAAc;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE,oEAAW;AACpF,8CAA8C,oEAAW;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,IAAI;AACd,UAAU,QAAQ;AAClB,YAAY;AACZ;AACO;AACP;AACA,QAAQ,0EAAiB;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA,QAAQ,6EAAoB;AAC5B;AACA;;AAEA;AACA,IAAI,kFAAyB;AAC7B;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,oFAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,cAAc,mBAAmB;AACjC,gBAAgB;AAChB;AACA;AACA,4EAA4E,+EAAsB,EAAE,gFAAuB;AAC3H;AACA,kBAAkB,iFAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,+FAAsC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,iGAAwC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA,0CAA0C,+EAAsB,EAAE,gFAAuB;AACzF;AACA,0CAA0C,+EAAsB,EAAE,gFAAuB;AACzF;AACA,0CAA0C,+EAAsB,EAAE,gFAAuB;AACzF;AACA,kBAAkB,sFAA6B;AAC/C;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,2CAA2C,+EAAsB,EAAE,gFAAuB;AAC1F;AACA,QAAQ,qFAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,2CAA2C,+EAAsB,EAAE,gFAAuB;AAC1F;AACA,QAAQ,qFAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;AACA,YAAY,qFAA4B;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,qFAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,kFAAyB;AACrC;AACA;AACA;AACA,SAAS;AACT,YAAY,6EAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+EAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,+EAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,2FAAkC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,8FAAqC;AACvD;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,oFAA2B;AACnC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,mFAA0B;AACtC;AACA;AACA;AACA,SAAS;AACT,YAAY,6EAAoB;AAChC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,2FAAkC;AAC9C;AACA;AACA;AACA,SAAS;AACT,YAAY,6EAAoB;AAChC;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,oFAA2B;AACnC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,8EAAqB;AACvC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,gFAAuB;AACnC;AACA;AACA;AACA,SAAS;AACT,YAAY,6EAAoB;AAChC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY,+EAAsB;AAClC;AACA;AACA;AACA,SAAS;AACT,YAAY,6EAAoB;AAChC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,sFAA6B;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,oFAA2B;AAC7C;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,+EAAsB,EAAE,gFAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL,QAAQ,6EAAoB;AAC5B;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,+EAAsB,EAAE,gFAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,+EAAsB,EAAE,gFAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,+EAAsB,EAAE,gFAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,+EAAsB,EAAE,gFAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,+EAAsB,EAAE,gFAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,4DAA4D,+EAAsB,EAAE,gFAAuB;AAC3G;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA,sCAAsC,+EAAsB,EAAE,gFAAuB;AACrF;AACA;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;ACj+BA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C","file":"bootstrap.0.bundle.js","sourcesContent":["import * as wasm from './compose_area_bg.wasm';\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* Process a DOM node recursively and extract text.\n*\n* Convert elements like images to alt text.\n* @param {any} root_element\n* @param {boolean} no_trim\n* @returns {string}\n*/\nexport function extract_text(root_element, no_trim) {\n    try {\n        wasm.extract_text(8, addBorrowedObject(root_element), no_trim);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        heap[stack_pointer++] = undefined;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction handleError(e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n}\n/**\n* The context object containing the state.\n*/\nexport class ComposeArea {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ComposeArea.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_composearea_free(ptr);\n    }\n    /**\n    * Initialize a new compose area wrapper.\n    *\n    * If the `log_level` argument is supplied, the console logger is\n    * initialized. Valid log levels: `trace`, `debug`, `info`, `warn` or\n    * `error`.\n    * @param {any} wrapper\n    * @param {string | undefined} log_level\n    * @returns {ComposeArea}\n    */\n    static bind_to(wrapper, log_level) {\n        var ptr0 = isLikeNone(log_level) ? 0 : passStringToWasm0(log_level, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.composearea_bind_to(addHeapObject(wrapper), ptr0, len0);\n        return ComposeArea.__wrap(ret);\n    }\n    /**\n    * Store the current selection range.\n    * Return the stored range.\n    * @returns {RangeResult}\n    */\n    store_selection_range() {\n        var ret = wasm.composearea_store_selection_range(this.ptr);\n        return RangeResult.__wrap(ret);\n    }\n    /**\n    * Restore the stored selection range.\n    *\n    * Return a boolean indicating whether a selection range was stored (and\n    * thus restored).\n    * @returns {boolean}\n    */\n    restore_selection_range() {\n        var ret = wasm.composearea_restore_selection_range(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * Insert an image at the current caret position.\n    *\n    * Return a reference to the inserted image element.\n    * @param {string} src\n    * @param {string} alt\n    * @param {string} cls\n    * @returns {any}\n    */\n    insert_image(src, alt, cls) {\n        var ptr0 = passStringToWasm0(src, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(alt, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(cls, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        var ret = wasm.composearea_insert_image(this.ptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        return takeObject(ret);\n    }\n    /**\n    * Insert plain text at the current caret position.\n    * @param {string} text\n    */\n    insert_text(text) {\n        var ptr0 = passStringToWasm0(text, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.composearea_insert_text(this.ptr, ptr0, len0);\n    }\n    /**\n    * Insert HTML at the current caret position.\n    *\n    * Note: This is potentially dangerous, make sure that you only insert\n    * HTML from trusted sources!\n    * @param {string} html\n    */\n    insert_html(html) {\n        var ptr0 = passStringToWasm0(html, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.composearea_insert_html(this.ptr, ptr0, len0);\n    }\n    /**\n    * Insert the specified node at the previously stored selection range.\n    * Set the caret position to right after the newly inserted node.\n    *\n    * **NOTE:** Due to browser limitations, this will not result in a new\n    * entry in the browser\\'s internal undo stack. This means that the node\n    * insertion cannot be undone using Ctrl+Z.\n    * @param {any} node_ref\n    */\n    insert_node(node_ref) {\n        try {\n            wasm.composearea_insert_node(this.ptr, addBorrowedObject(node_ref));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Return the last range of the selection that is within the wrapper\n    * element.\n    * @returns {RangeResult}\n    */\n    fetch_range() {\n        var ret = wasm.composearea_fetch_range(this.ptr);\n        return RangeResult.__wrap(ret);\n    }\n    /**\n    * Extract the text in the compose area.\n    *\n    * Convert elements like images to alt text.\n    *\n    * Args:\n    * - `no_trim`: If set to `true`, don\\'t trim leading / trailing whitespace\n    *   from returned text. Default: `false`.\n    * @param {boolean | undefined} no_trim\n    * @returns {string}\n    */\n    get_text(no_trim) {\n        try {\n            wasm.composearea_get_text(8, this.ptr, isLikeNone(no_trim) ? 0xFFFFFF : no_trim ? 1 : 0);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Focus the compose area.\n    */\n    focus() {\n        wasm.composearea_focus(this.ptr);\n    }\n    /**\n    * Clear the contents of the compose area.\n    */\n    clear() {\n        wasm.composearea_clear(this.ptr);\n    }\n    /**\n    * Return the word (whitespace delimited) at the current caret position.\n    *\n    * Note: This methods uses the range that was last set with\n    * `store_selection_range`.\n    * @returns {WordAtCaret | undefined}\n    */\n    get_word_at_caret() {\n        var ret = wasm.composearea_get_word_at_caret(this.ptr);\n        return ret === 0 ? undefined : WordAtCaret.__wrap(ret);\n    }\n    /**\n    * Select the word (whitespace delimited) at the current caret position.\n    *\n    * Note: This methods uses the range that was last set with\n    * `store_selection_range`.\n    * @returns {boolean}\n    */\n    select_word_at_caret() {\n        var ret = wasm.composearea_select_word_at_caret(this.ptr);\n        return ret !== 0;\n    }\n}\n/**\n*/\nexport class RangeResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RangeResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_rangeresult_free(ptr);\n    }\n    /**\n    * Used by JS code to show a string representation of the range.\n    * @returns {string}\n    */\n    to_string() {\n        try {\n            wasm.rangeresult_to_string(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Used by JS code to show a string representation of the range.\n    * @returns {string}\n    */\n    to_string_compact() {\n        try {\n            wasm.rangeresult_to_string_compact(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n*/\nexport class WordAtCaret {\n\n    static __wrap(ptr) {\n        const obj = Object.create(WordAtCaret.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_wordatcaret_free(ptr);\n    }\n    /**\n    * @returns {any}\n    */\n    node() {\n        var ret = wasm.wordatcaret_node(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    before() {\n        try {\n            wasm.wordatcaret_before(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    after() {\n        try {\n            wasm.wordatcaret_after(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Return the UTF16 offset from the start node where the current word starts (inclusive).\n    * @returns {number}\n    */\n    start_offset() {\n        var ret = wasm.wordatcaret_start_offset(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Return the UTF16 offset from the start node where the current word ends (exclusive).\n    * @returns {number}\n    */\n    end_offset() {\n        var ret = wasm.wordatcaret_end_offset(this.ptr);\n        return ret >>> 0;\n    }\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_object_clone_ref = function(arg0) {\n    var ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __widl_instanceof_Window = function(arg0) {\n    var ret = getObject(arg0) instanceof Window;\n    return ret;\n};\n\nexport const __widl_f_data_CharacterData = function(arg0, arg1) {\n    var ret = getObject(arg1).data;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __widl_f_length_CharacterData = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport const __widl_f_add_2_DOMTokenList = function(arg0, arg1, arg2, arg3, arg4) {\n    try {\n        getObject(arg0).add(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_create_range_Document = function(arg0) {\n    try {\n        var ret = getObject(arg0).createRange();\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_get_element_by_id_Document = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).getElementById(getStringFromWasm0(arg1, arg2));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport const __widl_instanceof_Element = function(arg0) {\n    var ret = getObject(arg0) instanceof Element;\n    return ret;\n};\n\nexport const __widl_f_set_attribute_Element = function(arg0, arg1, arg2, arg3, arg4) {\n    try {\n        getObject(arg0).setAttribute(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_tag_name_Element = function(arg0, arg1) {\n    var ret = getObject(arg1).tagName;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __widl_f_id_Element = function(arg0, arg1) {\n    var ret = getObject(arg1).id;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __widl_f_class_list_Element = function(arg0) {\n    var ret = getObject(arg0).classList;\n    return addHeapObject(ret);\n};\n\nexport const __widl_instanceof_HTMLDocument = function(arg0) {\n    var ret = getObject(arg0) instanceof HTMLDocument;\n    return ret;\n};\n\nexport const __widl_f_exec_command_with_show_ui_and_value_HTMLDocument = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n    try {\n        var ret = getObject(arg0).execCommand(getStringFromWasm0(arg1, arg2), arg3 !== 0, getStringFromWasm0(arg4, arg5));\n        return ret;\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_instanceof_HTMLElement = function(arg0) {\n    var ret = getObject(arg0) instanceof HTMLElement;\n    return ret;\n};\n\nexport const __widl_f_focus_HTMLElement = function(arg0) {\n    try {\n        getObject(arg0).focus();\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_alt_HTMLImageElement = function(arg0, arg1) {\n    var ret = getObject(arg1).alt;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __widl_instanceof_Node = function(arg0) {\n    var ret = getObject(arg0) instanceof Node;\n    return ret;\n};\n\nexport const __widl_f_append_child_Node = function(arg0, arg1) {\n    try {\n        var ret = getObject(arg0).appendChild(getObject(arg1));\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_contains_Node = function(arg0, arg1) {\n    var ret = getObject(arg0).contains(getObject(arg1));\n    return ret;\n};\n\nexport const __widl_f_has_child_nodes_Node = function(arg0) {\n    var ret = getObject(arg0).hasChildNodes();\n    return ret;\n};\n\nexport const __widl_f_insert_before_Node = function(arg0, arg1, arg2) {\n    try {\n        var ret = getObject(arg0).insertBefore(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_normalize_Node = function(arg0) {\n    getObject(arg0).normalize();\n};\n\nexport const __widl_f_remove_child_Node = function(arg0, arg1) {\n    try {\n        var ret = getObject(arg0).removeChild(getObject(arg1));\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_node_type_Node = function(arg0) {\n    var ret = getObject(arg0).nodeType;\n    return ret;\n};\n\nexport const __widl_f_node_name_Node = function(arg0, arg1) {\n    var ret = getObject(arg1).nodeName;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __widl_f_child_nodes_Node = function(arg0) {\n    var ret = getObject(arg0).childNodes;\n    return addHeapObject(ret);\n};\n\nexport const __widl_f_last_child_Node = function(arg0) {\n    var ret = getObject(arg0).lastChild;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport const __widl_f_node_value_Node = function(arg0, arg1) {\n    var ret = getObject(arg1).nodeValue;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __widl_f_item_NodeList = function(arg0, arg1) {\n    var ret = getObject(arg0).item(arg1 >>> 0);\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport const __widl_f_get_NodeList = function(arg0, arg1) {\n    var ret = getObject(arg0)[arg1 >>> 0];\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport const __widl_f_length_NodeList = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport const __widl_f_clone_range_Range = function(arg0) {\n    var ret = getObject(arg0).cloneRange();\n    return addHeapObject(ret);\n};\n\nexport const __widl_f_collapse_with_to_start_Range = function(arg0, arg1) {\n    getObject(arg0).collapse(arg1 !== 0);\n};\n\nexport const __widl_f_delete_contents_Range = function(arg0) {\n    try {\n        getObject(arg0).deleteContents();\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_insert_node_Range = function(arg0, arg1) {\n    try {\n        getObject(arg0).insertNode(getObject(arg1));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_set_end_Range = function(arg0, arg1, arg2) {\n    try {\n        getObject(arg0).setEnd(getObject(arg1), arg2 >>> 0);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_set_end_after_Range = function(arg0, arg1) {\n    try {\n        getObject(arg0).setEndAfter(getObject(arg1));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_set_end_before_Range = function(arg0, arg1) {\n    try {\n        getObject(arg0).setEndBefore(getObject(arg1));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_set_start_Range = function(arg0, arg1, arg2) {\n    try {\n        getObject(arg0).setStart(getObject(arg1), arg2 >>> 0);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_set_start_after_Range = function(arg0, arg1) {\n    try {\n        getObject(arg0).setStartAfter(getObject(arg1));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_set_start_before_Range = function(arg0, arg1) {\n    try {\n        getObject(arg0).setStartBefore(getObject(arg1));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_start_container_Range = function(arg0) {\n    try {\n        var ret = getObject(arg0).startContainer;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_start_offset_Range = function(arg0) {\n    try {\n        var ret = getObject(arg0).startOffset;\n        return ret;\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_end_container_Range = function(arg0) {\n    try {\n        var ret = getObject(arg0).endContainer;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_end_offset_Range = function(arg0) {\n    try {\n        var ret = getObject(arg0).endOffset;\n        return ret;\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_collapsed_Range = function(arg0) {\n    var ret = getObject(arg0).collapsed;\n    return ret;\n};\n\nexport const __widl_f_common_ancestor_container_Range = function(arg0) {\n    try {\n        var ret = getObject(arg0).commonAncestorContainer;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_add_range_Selection = function(arg0, arg1) {\n    try {\n        getObject(arg0).addRange(getObject(arg1));\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_get_range_at_Selection = function(arg0, arg1) {\n    try {\n        var ret = getObject(arg0).getRangeAt(arg1 >>> 0);\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_remove_all_ranges_Selection = function(arg0) {\n    try {\n        getObject(arg0).removeAllRanges();\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_range_count_Selection = function(arg0) {\n    var ret = getObject(arg0).rangeCount;\n    return ret;\n};\n\nexport const __widl_instanceof_Text = function(arg0) {\n    var ret = getObject(arg0) instanceof Text;\n    return ret;\n};\n\nexport const __widl_f_get_selection_Window = function(arg0) {\n    try {\n        var ret = getObject(arg0).getSelection();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __widl_f_document_Window = function(arg0) {\n    var ret = getObject(arg0).document;\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\n\nexport const __widl_f_debug_1_ = function(arg0) {\n    console.debug(getObject(arg0));\n};\n\nexport const __widl_f_error_1_ = function(arg0) {\n    console.error(getObject(arg0));\n};\n\nexport const __widl_f_info_1_ = function(arg0) {\n    console.info(getObject(arg0));\n};\n\nexport const __widl_f_log_1_ = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport const __widl_f_warn_1_ = function(arg0) {\n    console.warn(getObject(arg0));\n};\n\nexport const __wbg_newnoargs_c4b2cbbd30e2d057 = function(arg0, arg1) {\n    var ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_call_12b949cfc461d154 = function(arg0, arg1) {\n    try {\n        var ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __wbg_globalThis_22e06d4bea0084e3 = function() {\n    try {\n        var ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __wbg_self_00b0599bca667294 = function() {\n    try {\n        var ret = self.self;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __wbg_window_aa795c5aad79b8ac = function() {\n    try {\n        var ret = window.window;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __wbg_global_cc239dc2303f417c = function() {\n    try {\n        var ret = global.global;\n        return addHeapObject(ret);\n    } catch (e) {\n        handleError(e)\n    }\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbindgen_debug_string = function(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}